<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.lautarocutri.dev</groupId>
	<artifactId>mareo-envios</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Mareo_Envios</name>
	<description>Mareo_Envios</description>
	<url>https://github.com/lau-bin</url>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/MIT</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Lautaro Cutri</name>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:git://github.com/lau-bin/mareo-envios.git</connection>
		<developerConnection>scm:git:ssh://github.com/lau-bin/mareo-envios.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/lau-bin/mareo-envios</url>
	</scm>
	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<openapi.generator.name>typescript-axios</openapi.generator.name>
		<docker.image.name>${project.name}:${project.version}</docker.image.name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.5.3.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.20.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.20.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-asciidoctor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-maven-plugin</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.asciidoctor</groupId>
			<artifactId>asciidoctorj-pdf</artifactId>
			<version>2.3.18</version>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot2</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-webtestclient</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.5.5.Final</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
						<path>
							<groupId>com.querydsl</groupId>
							<artifactId>querydsl-apt</artifactId>
							<classifier>jpa</classifier>
							<version>5.0.0</version>
						</path>
						<path>
							<!-- querydsl is not declaring a dependency to JPA-->
							<groupId>javax.persistence</groupId>
							<artifactId>javax.persistence-api</artifactId>
							<version>2.2</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.hibernate.orm.tooling</groupId>
				<artifactId>hibernate-enhance-maven-plugin</artifactId>
				<version>5.6.15.Final</version>
				<executions>
					<execution>
						<id>enhance</id>
						<goals>
							<goal>enhance</goal>
						</goals>
						<configuration>
							<enableLazyInitialization>true</enableLazyInitialization>
							<enableDirtyTracking>true</enableDirtyTracking>
							<enableAssociationManagement>true</enableAssociationManagement>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.5.1</version>
				<executions>
					<execution>
						<id>run-integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
<!--				Plugin to set correct version to docker image name-->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<id>set-lowercase-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<name>docker.image.name.lowercase</name>
							<value>${docker.image.name}</value>
							<regex>(.*)</regex>
							<replacement>$1</replacement>
							<toLowerCase>true</toLowerCase>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>docker-compose-up</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<!--suppress UnresolvedMavenProperty do not build docker inside docker, this is set on the Dockerfile-->
							<skip>${skip.docker.build}</skip>
							<executable>docker-compose</executable>
							<arguments>
								<argument>up</argument>
								<argument>-d</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-compose-down</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<!--suppress UnresolvedMavenProperty do not build docker inside docker, this is set on the Dockerfile-->
							<skip>${skip.docker.build}</skip>
							<executable>docker-compose</executable>
							<arguments>
								<argument>down</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
<!--						Build only the builder image to perform integration tests on it-->
						<id>docker-builder-build</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<!--suppress UnresolvedMavenProperty do not build docker inside docker, this is set on the Dockerfile-->
							<skip>${skip.docker.build}</skip>
							<executable>docker</executable>
							<arguments>
								<argument>build</argument>
								<argument>--target</argument>
								<argument>builder</argument>
								<argument>-t</argument>
								<!--suppress UnresolvedMavenProperty is defined with build-helper-maven-plugin-->
								<argument>build-image</argument>
								<argument>.</argument> <!-- Context (root of the project where Dockerfile is) -->
							</arguments>
						</configuration>
					</execution>
					<execution>
<!--						Build the light image as last step-->
						<id>docker-final-build</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<!--suppress UnresolvedMavenProperty do not build docker inside docker, this is set on the Dockerfile-->
							<skip>${skip.docker.build}</skip>
							<executable>docker</executable>
							<arguments>
								<argument>build</argument>
								<argument>--build-arg</argument>
								<argument>APP_NAME=${project.build.finalName}</argument>
								<argument>--target</argument>
								<argument>final</argument>
								<argument>-t</argument>
								<!--suppress UnresolvedMavenProperty is defined with build-helper-maven-plugin-->
								<argument>${docker.image.name.lowercase}</argument>
								<argument>.</argument> <!-- Context (root of the project where Dockerfile is) -->
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>generate_doc</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>2.2.1</version>
						<executions>
							<execution>
								<id>generate-docs</id>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html</backend>
									<backend>pdf</backend>
									<doctype>book</doctype>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.springframework.restdocs</groupId>
								<artifactId>spring-restdocs-asciidoctor</artifactId>
								<version>2.0.6.RELEASE</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_api_helpers</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springdoc</groupId>
						<artifactId>springdoc-openapi-maven-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<outputFileName>openapi-docs.json</outputFileName>
									<outputDir>${project.build.directory}</outputDir>
									<skip>true</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.openapitools</groupId>
						<artifactId>openapi-generator-maven-plugin</artifactId>
						<version>7.1.0</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<inputSpec>${project.build.directory}/openapi-docs.json</inputSpec>
									<generatorName>${openapi.generator.name}</generatorName>
									<output>${project.build.directory}/generated-sources/openapi</output>
									<apiPackage>api</apiPackage>
									<modelPackage>model</modelPackage>
									<configOptions>
										<npmName>mareo_envios_openapi</npmName>
										<npmVersion>1.0.0</npmVersion>
									</configOptions>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
